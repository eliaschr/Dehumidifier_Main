;*********************************************************************************************
;* AutoDefs.h43                                                                              *
;*-------------------------------------------------------------------------------------------*
;* Author: eliaschr                                                                          *
;* Copyright (c) 2019, Elias Chrysocheris                                                    *
;*                                                                                           *
;* This program is free software: you can redistribute it and/or modify                      *
;* it under the terms of the GNU General Public License as published by                      *
;* the Free Software Foundation, either version 3 of the License, or                         *
;* (at your option) any later version.                                                       *
;*                                                                                           *
;* This program is distributed in the hope that it will be useful,                           *
;* but WITHOUT ANY WARRANTY; without even the implied warranty of                            *
;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             *
;* GNU General Public License for more details.                                              *
;*                                                                                           *
;* You should have received a copy of the GNU General Public License                         *
;* along with this program.  If not, see <https://www.gnu.org/licenses/>.                    *
;*-------------------------------------------------------------------------------------------*
;* Here there are some automatic definitions computed. The reason is for the setup to be as  *
;* simple as possible and the user intervention as less as possible.                         *
;* Example of automatic definitions is the computation of interrupt vectors according to     *
;* the pins a resource is connected to.                                                      *
;*********************************************************************************************
;* Note: Correct format of the file is presented when tab space is set to 4

	.if ($isdefed("__BOARD_AUTO_DEFS__") == 0)
	.if ($isdefed("__BOARD_DEFS__") == 0)
		.emsg "Board.h43 should be included before AutoDefs.h43"
	.endif

__BOARD_AUTO_DEFS__:	.equ	1					;Need to define this in order to avoid
													; double inclusions
;----------------------------------------
; Keyboard Definitions
;========================================
	.if (Board_KeyPort == 1)						;Lets define the keyboard registers needed
KBD_DIN:				.equ	P1IN				;Data input register from keyboard
KBD_DOUT:				.equ	P1OUT				;Data output register for keyboard
KBD_DIR:				.equ	P1DIR				;Direction selection register for key pins
KBD_REN:				.equ	P1REN				;Resistor setup register for key pins
KBD_SEL0:				.equ	P1SEL0				;Special function selection registers
KBD_SEL1:				.equ	P1SEL1
KBD_INTE:				.equ	P1IE				;Interrupt enable register for keypresses
KBD_INTES:				.equ	P1IES				;Interrupt edge selector register 
KBD_INTF:				.equ	P1IFG				;Interrupt flags reflecting the keypresses
KBD_INTV:				.equ	P1IV				;Interrupt vector register
KBD_Vector:				.equ	PORT1_VECTOR		;Interrupt Vector Segment
	.elseif (Board_KeyPort == 2)
KBD_DIN:				.equ	P2IN
KBD_DOUT:				.equ	P2OUT
KBD_DIR:				.equ	P2DIR
KBD_REN:				.equ	P2REN
KBD_SEL0:				.equ	P2SEL0
KBD_SEL1:				.equ	P2SEL1
KBD_INTE:				.equ	P2IE
KBD_INTES:				.equ	P2IES
KBD_INTF:				.equ	P2IFG
KBD_INTV:				.equ	P2IV
KBD_Vector:				.equ	PORT2_VECTOR
	.elseif (Board_KeyPort == 3)
KBD_DIN:				.equ	P3IN
KBD_DOUT:				.equ	P3OUT
KBD_DIR:				.equ	P3DIR
KBD_REN:				.equ	P3REN
KBD_SEL0:				.equ	P3SEL0
KBD_SEL1:				.equ	P3SEL1
KBD_INTE:				.equ	P3IE
KBD_INTES:				.equ	P3IES
KBD_INTF:				.equ	P3IFG
KBD_INTV:				.equ	P3IV
KBD_Vector:				.equ	PORT3_VECTOR
	.elseif (Board_KeyPort == 4)
KBD_DIN:				.equ	P4IN
KBD_DOUT:				.equ	P4OUT
KBD_DIR:				.equ	P4DIR
KBD_REN:				.equ	P4REN
KBD_SEL0:				.equ	P4SEL0
KBD_SEL1:				.equ	P4SEL1
KBD_INTE:				.equ	P4IE
KBD_INTES:				.equ	P4IES
KBD_INTF:				.equ	P4IFG
KBD_INTV:				.equ	P4IV
KBD_Vector:				.equ	PORT4_VECTOR
	.elseif (Board_KeyPort == 5)
KBD_DIN:				.equ	P5IN
KBD_DOUT:				.equ	P5OUT
KBD_DIR:				.equ	P5DIR
KBD_REN:				.equ	P5REN
KBD_SEL0:				.equ	P5SEL0
KBD_SEL1:				.equ	P5SEL1
KBD_INTE:				.equ	P5IE
KBD_INTES:				.equ	P5IES
KBD_INTF:				.equ	P5IFG
KBD_INTV:				.equ	P5IV
KBD_Vector:				.equ	PORT5_VECTOR
	.elseif (Board_KeyPort == 6)
KBD_DIN:				.equ	P6IN
KBD_DOUT:				.equ	P6OUT
KBD_DIR:				.equ	P6DIR
KBD_REN:				.equ	P6REN
KBD_SEL0:				.equ	P6SEL0
KBD_SEL1:				.equ	P6SEL1
KBD_INTE:				.equ	P6IE
KBD_INTES:				.equ	P6IES
KBD_INTF:				.equ	P6IFG
KBD_INTV:				.equ	P6IV
KBD_Vector:				.equ	PORT6_VECTOR
	.elseif (Board_KeyPort == 7)
KBD_DIN:				.equ	P7IN
KBD_DOUT:				.equ	P7OUT
KBD_DIR:				.equ	P7DIR
KBD_REN:				.equ	P7REN
KBD_SEL0:				.equ	P7SEL0
KBD_SEL1:				.equ	P7SEL1
KBD_INTE:				.equ	P7IE
KBD_INTES:				.equ	P7IES
KBD_INTF:				.equ	P7IFG
KBD_INTV:				.equ	P7IV
KBD_Vector:				.equ	PORT7_VECTOR
	.elseif (Board_KeyPort == 8)
KBD_DIN:				.equ	P8IN
KBD_DOUT:				.equ	P8OUT
KBD_DIR:				.equ	P8DIR
KBD_REN:				.equ	P8REN
KBD_SEL0:				.equ	P8SEL0
KBD_SEL1:				.equ	P8SEL1
KBD_INTE:				.equ	P8IE
KBD_INTES:				.equ	P8IES
KBD_INTF:				.equ	P8IFG
KBD_INTV:				.equ	P8IV
KBD_Vector:				.equ	PORT8_VECTOR
	.else
		.emsg "Board_KeyPort definition in Board.h43 file has to be between 1 and 8"
	.endif											;Board_KeyPort

	.endif											;__BOARD_AUTO_DEFS__
