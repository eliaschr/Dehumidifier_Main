;*********************************************************************************************
;* I2C Bus Support Library                                                                   *
;*-------------------------------------------------------------------------------------------*
;* I2CBus.h43                                                                                *
;* Author: eliaschr                                                                          *
;* Copyright (c) 2019, Elias Chrysocheris                                                    *
;*                                                                                           *
;* This program is free software: you can redistribute it and/or modify                      *
;* it under the terms of the GNU General Public License as published by                      *
;* the Free Software Foundation, either version 3 of the License, or                         *
;* (at your option) any later version.                                                       *
;*                                                                                           *
;* This program is distributed in the hope that it will be useful,                           *
;* but WITHOUT ANY WARRANTY; without even the implied warranty of                            *
;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             *
;* GNU General Public License for more details.                                              *
;*                                                                                           *
;* You should have received a copy of the GNU General Public License                         *
;* along with this program.  If not, see <https://www.gnu.org/licenses/>.                    *
;*-------------------------------------------------------------------------------------------*
;* In this file all the necessary definitions for the use of an I2C bus are defined.         *
;*********************************************************************************************
;* Note: Correct format of the file is presented when tab space is set to 4
			.title	"I2C Bus Supoort Library"
			.width	94
			.tab	4

;*===========================================================================================*
;* Definitions of the Library (Set by the developper):                                       *
;* ----------------------------------------------------                                      *
;* I2CTXBUFFLEN   : Sets the size of I2C transmission buffer in words                        *
;* I2CRXBUFFLEN   : Sets the size of I2C reception buffer in bytes                           *
;* I2CRXTHRESHOLD : When the receive buffer has reached that value of bytes, it wakes the    *
;*                  system up as the buffer is considered almost full.                       *
;* I2COWNADDR     : The address of MSP if it was a slave (7 bits) (Not really needed here)   *
;* I2C_BPS        : Bit rate of the I2C bus                                                  *
;*                                                                                           *
;*===========================================================================================*
;* Definitions of the Library:                                                               *
;* ----------------------------                                                              *
;* I2CPORT : The eUSCI_B module to be used as I2C port that communicates with the sensor     *
;*                                                                                           *
;*===========================================================================================*
;* Global functions of the Library:                                                          *
;* ---------------------------------                                                         *
;* I2CPInit     : Initialize the port pins used as I2C                                       *
;* I2CInit      : Initializes the eUSCI as I2C                                               *
;* I2CStartTx   : Starts a communication as a transmitter                                    *
;* I2CSend      : Continues a transmission                                                   *
;* I2CStop      : Sends a Stop Condition                                                     *
;* I2CStartRx   : Starts a communication as a receiver                                       *
;* I2CReadBuf   : Reads a byte received through I2C                                          *
;* I2CGetStatus : Gets the status flags of I2C subsystem                                     *
;* I2CReset     : Resets the I2C subsystem in a way to make it ready for starting a new      *
;*                communication                                                              *
;*                                                                                           *
;*===========================================================================================*
;* Predefined Definitions Expected by the Library:                                           *
;* ------------------------------------------------                                          *
;* Board_THSensorI2CPort : Defined in Board.h file. Sets the eUSCI_B number of bus used for  *
;*                         I2C communications                                                *
;*                                                                                           *
;*********************************************************************************************

	.if  ($isdefed("__I2CBUSLIB_H43__") == 0)

__I2CBUSLIB_H43__:		.equ	1				;Must define this in order to avoid double
												; inclusions
;----------------------------------------
; Global Definitions
;========================================
I2CTXBUFFLEN:		.equ	32					;Size of I2C transmission buffer in words
I2CRXBUFFLEN:		.equ	32					;Size of I2C reception buffer
I2CRXTHRESHOLD:		.equ	24					;Receive threshold value
I2COWNADDR:			.equ	076h				;The address of MSP if it was a slave (7 bits)
I2C_BPS:			.equ	400000				;Bps of the I2C bus
I2CPORT:			.equ	Board_THSensorI2CPort	;Number of eUSCI_B serial module to
												; use for the sensor
;Flags that appear in I2CStatus variable to describe the status of I2C subsystem
I2CBUZY:			.equ	BITF				;I2C Bus is buzy (Transaction in progress)
I2CTRANSMIT:		.equ	BITE				;I2C Subsystem sends data
I2CPRESTOP:			.equ	BITD				;I2C Early Stop condition met => Scheduled
												; bytes were skipped
I2CNACKRECV:		.equ	BITC				;I2C Received a NAck
I2CCOUNTOK:			.equ	BITB				;Threashold counter reached
I2CRXOVFL:			.equ	BITA				;Rx buffer overflow
I2CRXFULL:			.equ	BIT9				;Rx Buffer is now full. No more bytes to store
I2CRXLIMIT:			.equ	BIT8				;When the Rx buffer has reached a threshold,
												; this flag is set to notify for Almost Full
												; condition
I2CTXINUSE:			.equ	BIT7				;Flags that the transmitter is in use now
I2CRXINUSE:			.equ	BIT6				;Flags that the receiver expects more data


;----------------------------------------
; Global Functions
;========================================
					.global	I2CPInit			;Initialize the port pins used as I2C
					.global	I2CInit				;Initializes the eUSCI as I2C
					.global	I2CStartTx			;Starts a communication as a transmitter
					.global	I2CSend				;Continues a transmission
					.global	I2CStop				;Sends a Stop Condition
					.global	I2CStartRx			;Starts a communication as a receiver
					.global	I2CReadBuf			;Reads a byte received through I2C
					.global	I2CGetStatus		;Gets the status flags of I2C subsystem
					.global	I2CReset			;Reset the I2C subsystem (Flushes buffers etc)


	.endif										;__I2CBUSLIB_H43__
