;*********************************************************************************************
;* UART - RS232 Library                                                                      *
;*-------------------------------------------------------------------------------------------*
;* UART.h43                                                                                  *
;* Author: eliaschr                                                                          *
;* Copyright (c) 2019, Elias Chrysocheris                                                    *
;*                                                                                           *
;* This program is free software: you can redistribute it and/or modify                      *
;* it under the terms of the GNU General Public License as published by                      *
;* the Free Software Foundation, either version 3 of the License, or                         *
;* (at your option) any later version.                                                       *
;*                                                                                           *
;* This program is distributed in the hope that it will be useful,                           *
;* but WITHOUT ANY WARRANTY; without even the implied warranty of                            *
;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             *
;* GNU General Public License for more details.                                              *
;*                                                                                           *
;* You should have received a copy of the GNU General Public License                         *
;* along with this program.  If not, see <https://www.gnu.org/licenses/>.                    *
;*-------------------------------------------------------------------------------------------*
;* In this file all the necessary definitions for the UART communication handling library    *
;* are  set and the functions that need to be available to the rest of the program are made  *
;* global.                                                                                   *
;*********************************************************************************************
;* Note: Correct format of the file is presented when tab space is set to 4
			.title	"UART - RS232 Library"
			.width	94
			.tab	4

;*===========================================================================================*
;* Definitions of the Library (Set by the developer):                                        *
;* ----------------------------------------------------                                      *
;* UART_TIMERA   : The TimerA module used for UART timeout counting                          *
;* UARTTXSIZE    : The number of bytes in cyclic transmit buffer                             *
;* UARTRXSIZE    : The number of bytes in cyclic receive buffer                              *
;* UARTRXWAKELIM : When the receive buffer reaches this limit, it is considered almost full  *
;*                  and the main thread wakes up to consume these data in order to have a    *
;*                  flowless communication                                                   *
;* UARTDATABITS  : Number of data bits (7 or 8)                                              *
;* UARTPARITY    : Expresses the parity setting. Can be one of "NONE", "ODD" or "EVEN"       *
;* UARTSTOPBITS  : Number of stop bits                                                       *
;* UARTBAUDRATE  : The Baud Rate needed                                                      *
;* WAKEUPCHARS   : The time in serial characters that when idle, the system wakes up to use  *
;*                  the fetched data.                                                        *
;* USEACLK       : Define if the clock source is ACLK. If it is 0 or undefined the system    *
;*                  uses SMClk as the clock source of the UART module                        *
;* BROS16        : If defined sets the UCOS16 bit state of UCAxMCTL for Over Sampling. If it *
;*                  is not defined the preprocessor automatically sets it at its optimum     *
;*                  value                                                                    *
;* BRSMOD        : If defined sets UCBRSx base value in UCAxMCTL. In that case BRFMOD must   *
;*                  also be defined. If it is not defined the preprocessor automatically     *
;*                  sets its optimum value                                                   *
;* BRFMOD        : If defined sets UCBRFx base value in UCAxMCTL. In that case BRSMOD must   *
;*                  also be defined. If it is not defined the preprocessor automatically     *
;*                  sets its optimum value                                                   *
;* UARTTEXTMODE  : Text Mode                                                                 *
;* UARTBINMODE   : Binary Mode                                                               *
;* UARTPACKETMODE: Packet Mode                                                               *
;* UARTUSCIBUS   : The number of eUSCI_A port to be used. Normally this is set through       *
;*                  Board.h43 file.                                                          *
;*                                                                                           *
;*===========================================================================================*
;* Definitions of the Library:                                                               *
;* ----------------------------                                                              *
;*                                                                                           *
;*===========================================================================================*
;* Global functions of the Library:                                                          *
;* ---------------------------------                                                         *
;* UARTPInit       : Initializes the port pins used for RS232                                *
;* UARTCInit       : Initializes the eUSCI_A peripheral to be used as UART-RS232             *
;* UARTSysInit     : Initializes UART variables and timeout timer                            *
;* UARTEnableInts  : Enables the receiving interrupt                                         *
;* UARTDisableInts : Disables the receiving interrupt                                        *
;* UARTSetBinMode  : Sets binary reception mode (no filtering)                               *
;* UARTSetTxtMode  : Sets text reception mode (EOL comes from CR/LF, at least one of them)   *
;* UARTCheckServe  : Checks if there is the need to serve received data                      *
;* UARTSend        : Sends a data byte through the RS232 bus                                 *
;* UARTReceive     : Gets one character previously read from RS232 bus                       *
;*                                                                                           *
;*===========================================================================================*
;* Predefined Definitions Expected by the Library:                                           *
;* ------------------------------------------------                                          *
;*                                                                                           *
;*********************************************************************************************

	.if  ($isdefed("__UART_RS232_LIB_H43__") == 0)

__UART_RS232_LIB_H43__:	.equ	1			;Must define this in order to avoid double
											; inclusions
;----------------------------------------
; Global Definitions
;========================================
UART_TIMERA:	.equ	4					;The TimerA module used for UART timeout counting

UARTTXSIZE:		.equ	32					;The number of bytes in cyclic transmit buffer
UARTRXSIZE:		.equ	32					;The number of bytes in cyclic receive buffer
UARTRXWAKELIM:	.equ	27					;The number of bytes that when the buffer reaches
											; it will wake up the system
UARTDATABITS:	.equ	8					;Number of data bits (7 or 8)
UARTPARITY:		.equ	"NONE"				;Expresses the parity setting. Can be one of
											; "NONE", "ODD" or "EVEN"
UARTSTOPBITS:	.equ	1					;Number of stop bits
UARTBAUDRATE:	.equ	115200				;The Baud Rate needed

WAKEUPCHARS:	.equ	10					;The time in serial characters that when idle, the
											; RS232 subsystem wakes up the system to use the
											; received data

;USEACLK:	.equ	1						;Define if the clock source is ACLK. If it is 0 or
											; commented out the clock source is SMCLK
											
;The folowing definition forces the oversampling bit setting in UCAxMCTL register. If it is
; coMmented out, the preprocessor selects its optimal value
;BROS16:		.set	0					;If defined sets the UCOS16 bit state of UCAxMCTL

;The following definitions, if commented out, they are calculated by the preprocessor. If they
; are set, no caclulation is done on them. They construct UCAxMCTL's value. None or All must
; be specified
;BRSMOD:		.set	0					;If defined sets UCBRSx base value in UCAxMCTL
;BRFMOD:		.set	0Bh					;If defined sets UCBRFx base value in UCAxMCTL

;The following definitions are for getting the current mode of the UART reception subsystem
UARTTEXTMODE:	.equ	0					;Text Mode
UARTBINMODE:	.equ	RSBinary			;Binary Mode
UARTPACKETMODE:	.equ	RSPacket			;Packet Mode

UARTUSCIBUS:	.equ	Board_CommPort		;The number of eUSCI_A port to be used


;----------------------------------------
; Global Variables
;========================================
			.global	RSBinary				;The flag that denotes Binary reception mode
			.global	RSPacket				;The flag that denotes Packet reception mode


;----------------------------------------
; Global Functions
;========================================
			.global	UARTPInit				;Initializes the port pins used for RS232
			.global	UARTCInit				;Initializes the eUSCI_A peripheral to be used as
											; UART-RS232
			.global	UARTSysInit				;Initializes UART variables and timeout timer
			.global	UARTEnableInts			;Enables the receiving interrupt
			.global	UARTDisableInts			;Disables the receiving interrupt
			.global	UARTSetBinMode			;Sets binary reception mode (no filtering)
			.global	UARTSetTxtMode			;Sets text reception mode (EOL comes from CR/LF)
			.global	UARTSetPcktMode			;Sets packet reception mode (Specific number of
											; bytes)
			.global	UARTGetMode				;Returns the current reception mode
			.global	UARTCheckServe			;Checks if there is the need to serve received
											; data
			.global	UARTSendStream			;Sends a whole stream of data (blocking call)
			.global	UARTSend				;Sends data through the RS232 bus
			.global	UARTReceive				;Gets one character previously read from RS232 bus
			.global	UARTReceiveStream		;Receives a number of bytes
			

	.endif									;__UART_RS232_LIB_H43__
